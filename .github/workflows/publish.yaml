# See: https://flutter.dev/desktop#distribution
# REF: https://github.com/flutter/gallery/blob/master/.github/workflows/release.yml

name: Publish pedax app

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'tag'
        required: true

jobs:
  publish_artifacts:
    env:
      PUBLISH_DIR: publish
      RELEASE_DESCRIPTION_TXT_FILE: release_description.txt
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
        mode: [release]
        include:
          - os: ubuntu-20.04
            subcommand: linux
            setup_desktop_script: .github/scripts/setup_on_linux.sh
            prepare_to_pack_script: .github/scripts/prepare_to_pack_for_linux.sh
            distribution_path: build/linux/x64/release
          - os: windows-2019
            subcommand: windows
            setup_desktop_script: .github/scripts/setup_on_windows.sh
            prepare_to_pack_script: .github/scripts/prepare_to_pack_for_windows.sh
            distribution_path: build/windows/runner/Release
          - os: macos-11
            subcommand: macos
            setup_desktop_script: .github/scripts/setup_on_macos.sh
            prepare_to_pack_script: .github/scripts/prepare_to_pack_for_macos.sh
            distribution_path: build/macos/Build/Products/release

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2.2.1
      - name: setup flutter channel
        shell: bash
        run: ./scripts/setup_flutter_channel.sh
      - name: setup flutter desktop
        shell: bash
        run: ${{ matrix.setup_desktop_script }}
      - name: doctor
        run: flutter doctor -v
      - name: install dependencies
        run: flutter pub get
      - name: build
        run: flutter build ${{ matrix.subcommand }} --${{ matrix.mode }}
      - name: prepare to pack
        shell: bash
        run: ${{ matrix.prepare_to_pack_script }}

      - name: output build info
        shell: bash
        run: .github/scripts/output_build_info.sh ${{ matrix.distribution_path }}

      - name: compress files (Windows)
        if: runner.os == 'Windows'
        run: |-
          mkdir -p ${{ env.PUBLISH_DIR }}
          cd ${{ matrix.distribution_path }}
          powershell Compress-Archive -Path ./* -DestinationPath $Env:GITHUB_WORKSPACE/${{ env.PUBLISH_DIR }}/pedax-${{ runner.os }}.zip
      - name: compress files (macOS, Linux)
        if: runner.os == 'macOS' || runner.os == 'Linux'
        run: |-
          mkdir -p ${{ env.PUBLISH_DIR }}
          cd ${{ matrix.distribution_path }}
          zip -r $GITHUB_WORKSPACE/${{ env.PUBLISH_DIR }}/pedax-${{ runner.os }}.zip .

      - name: generate release description file
        shell: bash
        run: |-
          # See: https://docs.github.com/ja/actions/reference/environment-variables
          cat << EOF > ${{ env.RELEASE_DESCRIPTION_TXT_FILE }}
          ## Changes

          ### All OSes

          ### MacOS

          ### Windows

          ### Linux

          ---
          This is created by $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID.
          EOF

      - uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          tag_name: ${{ github.event.inputs.tag }}
          files: ${{ env.PUBLISH_DIR }}/pedax-${{ runner.os }}.zip
          body_path: ${{ env.RELEASE_DESCRIPTION_TXT_FILE }}
