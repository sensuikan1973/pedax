# NOTE: Experimental Job. See: https://flutter.dev/desktop#distribution
# REF: https://github.com/google/flutter-desktop-embedding/blob/master/.github/workflows/ci.yml

name: Flutter Build

on:
  pull_request:
    paths: ['**.dart','pubspec.*', '.github/workflows/flutter_build.yaml', 'macos/**', 'linux/**', 'windows/**', 'assets/**']
  push:
    branches: [main]
    paths: ['**.dart','pubspec.*', '.github/workflows/flutter_build.yaml', 'macos/**', 'linux/**', 'windows/**', 'assets/**']

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false # I want results from all OSes even if one fails.
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]
        flutter_channel: [dev] # TODO: use beta in the future.
        mode: [release]
        include: # See: https://docs.github.com/ja/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#using-environment-variables-in-a-matrix
          - os: ubuntu-20.04
            subcommand: linux
            setup_script: .github/scripts/setup_on_linux.sh
            prepare_to_pack_script: .github/scripts/prepare_to_pack_for_linux.sh
            distribution_path: build/linux/x64/release
          - os: windows-2019
            subcommand: windows
            setup_script: .github/scripts/setup_on_windows.sh
            prepare_to_pack_script: .github/scripts/prepare_to_pack_for_windows.sh
            distribution_path: build/windows/runner/Release
          - os: macos-10.15
            subcommand: macos
            setup_script: .github/scripts/setup_on_macos.sh
            prepare_to_pack_script: .github/scripts/prepare_to_pack_for_macos.sh
            distribution_path: build/macos/Build/Products/release

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ matrix.flutter_channel }}
      - name: setup
        run: ${{ matrix.setup_script }}
      - name: install dependencies
        run: flutter pub get
      - name: doctor
        run: flutter doctor -v
      - name: build
        run: flutter build ${{ matrix.subcommand }} --${{ matrix.mode }}
      - name: postbuid script
        shell: bash
        run: ${{ matrix.postbuild_script }}

      # - name: set output path
      #   shell: bash
      #   run: |-
      #     path=$(echo ${{ matrix.distribution_path }} | sed -e 's/_mode_/${{ matrix.mode }}/g')
      #     echo "artifact_target=$path" >> $GITHUB_ENV

      - name: output build info
        shell: bash
        run: .github/scripts/output_build_info.sh ${{ matrix.distribution_path }}

      # - name: debug
      #   uses: mxschmitt/action-tmate@v3

      - uses: actions/upload-artifact@v2
        with:
          name: pedax-${{ runner.os }}
          path: ${{ matrix.distribution_path }}
